<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.demo.mapper.BorrowMapper" >
  <resultMap id="BaseResultMap" type="com.example.demo.po.Borrow" >
    <id column="borrow_id" property="borrowId" jdbcType="INTEGER" />
    <result column="u_id" property="uId" jdbcType="INTEGER" />
    <result column="u_no" property="uNo" jdbcType="INTEGER" />
    <result column="u_name" property="uName" jdbcType="VARCHAR" />
    <result column="book_id" property="bookId" jdbcType="INTEGER" />
    <result column="book_name" property="bookName" jdbcType="VARCHAR" />
    <result column="book_img" property="bookImg" jdbcType="VARCHAR" />
    <result column="add_time" property="addTime" jdbcType="TIMESTAMP" />
    <result column="stop_time" property="stopTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    borrow_id, u_id, u_no, u_name, book_id, book_name, book_img, add_time, stop_time
  </sql>
  
     <!-- 按照借书降序排列，并实现分页展示功能 -->
     <select id="selectByBorrowASC" resultMap="BaseResultMap"
         parameterType="java.lang.Integer">
         select
        <if test="distinct" >
      	distinct
    	</if>
    	<include refid="Base_Column_List" />
    	from borrow
    	<if test="_parameter != null" >
      	<include refid="Example_Where_Clause" />
    	</if>
         order by stop_time ASC 
     </select>
  
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.example.demo.po.BorrowExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from borrow
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from borrow
    where borrow_id = #{borrowId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from borrow
    where borrow_id = #{borrowId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.example.demo.po.BorrowExample" >
    delete from borrow
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.example.demo.po.Borrow" >
    insert into borrow (borrow_id, u_id, u_no, 
      u_name, book_id, book_name, 
      book_img, add_time, stop_time
      )
    values (#{borrowId,jdbcType=INTEGER}, #{uId,jdbcType=INTEGER}, #{uNo,jdbcType=INTEGER}, 
      #{uName,jdbcType=VARCHAR}, #{bookId,jdbcType=INTEGER}, #{bookName,jdbcType=VARCHAR}, 
      #{bookImg,jdbcType=VARCHAR}, #{addTime,jdbcType=TIMESTAMP}, #{stopTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.example.demo.po.Borrow" >
    insert into borrow
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="borrowId != null" >
        borrow_id,
      </if>
      <if test="uId != null" >
        u_id,
      </if>
      <if test="uNo != null" >
        u_no,
      </if>
      <if test="uName != null" >
        u_name,
      </if>
      <if test="bookId != null" >
        book_id,
      </if>
      <if test="bookName != null" >
        book_name,
      </if>
      <if test="bookImg != null" >
        book_img,
      </if>
      <if test="addTime != null" >
        add_time,
      </if>
      <if test="stopTime != null" >
        stop_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="borrowId != null" >
        #{borrowId,jdbcType=INTEGER},
      </if>
      <if test="uId != null" >
        #{uId,jdbcType=INTEGER},
      </if>
      <if test="uNo != null" >
        #{uNo,jdbcType=INTEGER},
      </if>
      <if test="uName != null" >
        #{uName,jdbcType=VARCHAR},
      </if>
      <if test="bookId != null" >
        #{bookId,jdbcType=INTEGER},
      </if>
      <if test="bookName != null" >
        #{bookName,jdbcType=VARCHAR},
      </if>
      <if test="bookImg != null" >
        #{bookImg,jdbcType=VARCHAR},
      </if>
      <if test="addTime != null" >
        #{addTime,jdbcType=TIMESTAMP},
      </if>
      <if test="stopTime != null" >
        #{stopTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.example.demo.po.BorrowExample" resultType="java.lang.Integer" >
    select count(*) from borrow
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update borrow
    <set >
      <if test="record.borrowId != null" >
        borrow_id = #{record.borrowId,jdbcType=INTEGER},
      </if>
      <if test="record.uId != null" >
        u_id = #{record.uId,jdbcType=INTEGER},
      </if>
      <if test="record.uNo != null" >
        u_no = #{record.uNo,jdbcType=INTEGER},
      </if>
      <if test="record.uName != null" >
        u_name = #{record.uName,jdbcType=VARCHAR},
      </if>
      <if test="record.bookId != null" >
        book_id = #{record.bookId,jdbcType=INTEGER},
      </if>
      <if test="record.bookName != null" >
        book_name = #{record.bookName,jdbcType=VARCHAR},
      </if>
      <if test="record.bookImg != null" >
        book_img = #{record.bookImg,jdbcType=VARCHAR},
      </if>
      <if test="record.addTime != null" >
        add_time = #{record.addTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.stopTime != null" >
        stop_time = #{record.stopTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update borrow
    set borrow_id = #{record.borrowId,jdbcType=INTEGER},
      u_id = #{record.uId,jdbcType=INTEGER},
      u_no = #{record.uNo,jdbcType=INTEGER},
      u_name = #{record.uName,jdbcType=VARCHAR},
      book_id = #{record.bookId,jdbcType=INTEGER},
      book_name = #{record.bookName,jdbcType=VARCHAR},
      book_img = #{record.bookImg,jdbcType=VARCHAR},
      add_time = #{record.addTime,jdbcType=TIMESTAMP},
      stop_time = #{record.stopTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.demo.po.Borrow" >
    update borrow
    <set >
      <if test="uId != null" >
        u_id = #{uId,jdbcType=INTEGER},
      </if>
      <if test="uNo != null" >
        u_no = #{uNo,jdbcType=INTEGER},
      </if>
      <if test="uName != null" >
        u_name = #{uName,jdbcType=VARCHAR},
      </if>
      <if test="bookId != null" >
        book_id = #{bookId,jdbcType=INTEGER},
      </if>
      <if test="bookName != null" >
        book_name = #{bookName,jdbcType=VARCHAR},
      </if>
      <if test="bookImg != null" >
        book_img = #{bookImg,jdbcType=VARCHAR},
      </if>
      <if test="addTime != null" >
        add_time = #{addTime,jdbcType=TIMESTAMP},
      </if>
      <if test="stopTime != null" >
        stop_time = #{stopTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where borrow_id = #{borrowId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.demo.po.Borrow" >
    update borrow
    set u_id = #{uId,jdbcType=INTEGER},
      u_no = #{uNo,jdbcType=INTEGER},
      u_name = #{uName,jdbcType=VARCHAR},
      book_id = #{bookId,jdbcType=INTEGER},
      book_name = #{bookName,jdbcType=VARCHAR},
      book_img = #{bookImg,jdbcType=VARCHAR},
      add_time = #{addTime,jdbcType=TIMESTAMP},
      stop_time = #{stopTime,jdbcType=TIMESTAMP}
    where borrow_id = #{borrowId,jdbcType=INTEGER}
  </update>
</mapper>